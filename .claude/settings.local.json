{
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "0"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Task",
      "Read",
      "Write",
      "Edit",
      "MultiEdit",
      "Glob",
      "Grep",
      "LS",
      "ExitPlanMode",
      "NotebookRead",
      "NotebookEdit",
      "WebFetch",
      "TodoWrite",
      "WebSearch",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(pcre2grep:*)",
      "Bash(fd:*)",
      "Bash(fzf:*)",
      "Bash(bat:*)",
      "Bash(eza:*)",
      "Bash(ripgrep:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(echo:*)",
      "Bash(tee:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(rmdir:*)",
      "Bash(chmod:*)",
      "Bash(zip:*)",
      "Bash(rar:*)",
      "Bash(tree:*)",
      "Bash(diff:*)",
      "Bash(od:*)",
      "Bash(gawk:*)",
      "Bash(gsed:*)",
      "Bash(gnu-sed:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(xq:*)",
      "Bash(miller:*)",
      "Bash(mlr:*)",
      "Bash(perl:*)",
      "Bash(nano:*)",
      "Bash(vim:*)",
      "Bash(python:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(bash:*)",
      "Bash(timeout:*)",
      "Bash(pkill:*)",
      "Bash(killall:*)",
      "Bash(kill:*)",
      "Bash(env)",
      "Bash(true)",
      "Bash(curl:*)",
      "Bash(git --version)",
      "Bash(git help:*)",
      "Bash(git status:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git show:*)",
      "Bash(git branch:*)",
      "Bash(git branch -a:*)",
      "Bash(git branch -r:*)",
      "Bash(git blame:*)",
      "Bash(git remote:*)",
      "Bash(git remote -v:*)",
      "Bash(git ls-remote:*)",
      "Bash(git config --list:*)",
      "Bash(git config --get:*)",
      "Bash(git tag:*)",
      "Bash(git tag -l:*)",
      "Bash(git describe:*)",
      "Bash(git rev-parse:*)",
      "Bash(git ls-files:*)",
      "Bash(git ls-tree:*)",
      "Bash(git cat-file:*)",
      "Bash(git reflog --no-walk:*)",
      "Bash(git shortlog:*)",
      "Bash(git whatchanged:*)",
      "Bash(git for-each-ref:*)",
      "Bash(git symbolic-ref:*)",
      "Bash(git name-rev:*)",
      "Bash(git count-objects:*)",
      "Bash(git verify-commit:*)",
      "Bash(git verify-tag:*)",
      "Bash(git stash list)",
      "Bash(git stash show:*)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(gh api:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "Bash(for:*)",
      "Bash(do sed -i.bak \"s/''conversation_id'': [^,]*,//g\" \"$file\")",
      "Bash(done)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(rg \"calendar_done.*=.*True\" flow_types/calendar.py -B5 -A5)",
      "Bash(./remove-dev-artifacts.sh:*)",
      "ListMcpResourcesTool",
      "ReadMcpResourceTool",
      "mcp__time__get_current_time",
      "mcp__time__convert_time",
      "mcp__fetch__fetch",
      "mcp__git__git_status",
      "mcp__git__git_diff_unstaged",
      "mcp__git__git_diff_staged",
      "mcp__git__git_diff",
      "mcp__git__git_log",
      "mcp__git__git_show",
      "mcp__git__git_commit",
      "mcp__git__git_add",
      "mcp__browserloop__screenshot",
      "mcp__browserloop__read_console",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__puppeteer__puppeteer_click",
      "mcp__puppeteer__puppeteer_iframe_click",
      "mcp__puppeteer__puppeteer_iframe_fill",
      "mcp__puppeteer__puppeteer_fill",
      "mcp__puppeteer__puppeteer_select",
      "mcp__puppeteer__puppeteer_hover",
      "mcp__puppeteer__puppeteer_upload_file",
      "mcp__puppeteer__puppeteer_evaluate",
      "mcp__puppeteer__puppeteer_console_logs",
      "mcp__puppeteer__puppeteer_close",
      "mcp__puppeteer__puppeteer_get",
      "mcp__puppeteer__puppeteer_post",
      "mcp__puppeteer__puppeteer_put",
      "mcp__puppeteer__puppeteer_patch",
      "mcp__puppeteer__puppeteer_delete",
      "mcp__puppeteer__puppeteer_expect_response",
      "mcp__puppeteer__puppeteer_assert_response",
      "mcp__puppeteer__puppeteer_custom_user_agent",
      "mcp__puppeteer__puppeteer_get_visible_text",
      "mcp__puppeteer__puppeteer_get_visible_html",
      "mcp__puppeteer__puppeteer_go_back",
      "mcp__puppeteer__puppeteer_go_forward",
      "mcp__puppeteer__puppeteer_drag",
      "mcp__puppeteer__puppeteer_press_key",
      "mcp__puppeteer__puppeteer_save_as_pdf",
      "mcp__puppeteer__puppeteer_click_and_switch_tab",
      "mcp__playwright-mcp-server__start_codegen_session",
      "mcp__playwright-mcp-server__end_codegen_session",
      "mcp__playwright-mcp-server__get_codegen_session",
      "mcp__playwright-mcp-server__clear_codegen_session",
      "mcp__playwright-mcp-server__playwright_navigate",
      "mcp__playwright-mcp-server__playwright_screenshot",
      "mcp__playwright-mcp-server__playwright_click",
      "mcp__playwright-mcp-server__playwright_iframe_click",
      "mcp__playwright-mcp-server__playwright_iframe_fill",
      "mcp__playwright-mcp-server__playwright_fill",
      "mcp__playwright-mcp-server__playwright_select",
      "mcp__playwright-mcp-server__playwright_hover",
      "mcp__playwright-mcp-server__playwright_upload_file",
      "mcp__playwright-mcp-server__playwright_evaluate",
      "mcp__playwright-mcp-server__playwright_console_logs",
      "mcp__playwright-mcp-server__playwright_close",
      "mcp__playwright-mcp-server__playwright_get",
      "mcp__playwright-mcp-server__playwright_post",
      "mcp__playwright-mcp-server__playwright_put",
      "mcp__playwright-mcp-server__playwright_patch",
      "mcp__playwright-mcp-server__playwright_delete",
      "mcp__playwright-mcp-server__playwright_expect_response",
      "mcp__playwright-mcp-server__playwright_assert_response",
      "mcp__playwright-mcp-server__playwright_custom_user_agent",
      "mcp__playwright-mcp-server__playwright_get_visible_text",
      "mcp__playwright-mcp-server__playwright_get_visible_html",
      "mcp__playwright-mcp-server__playwright_go_back",
      "mcp__playwright-mcp-server__playwright_go_forward",
      "mcp__playwright-mcp-server__playwright_drag",
      "mcp__playwright-mcp-server__playwright_press_key",
      "mcp__playwright-mcp-server__playwright_save_as_pdf",
      "mcp__playwright-mcp-server__playwright_click_and_switch_tab",
      "mcp__playwright-mcp__browser_close",
      "mcp__playwright-mcp__browser_resize",
      "mcp__playwright-mcp__browser_console_messages",
      "mcp__playwright-mcp__browser_handle_dialog",
      "mcp__playwright-mcp__browser_evaluate",
      "mcp__playwright-mcp__browser_file_upload",
      "mcp__playwright-mcp__browser_install",
      "mcp__playwright-mcp__browser_press_key",
      "mcp__playwright-mcp__browser_type",
      "mcp__playwright-mcp__browser_navigate",
      "mcp__playwright-mcp__browser_navigate_back",
      "mcp__playwright-mcp__browser_navigate_forward",
      "mcp__playwright-mcp__browser_network_requests",
      "mcp__playwright-mcp__browser_take_screenshot",
      "mcp__playwright-mcp__browser_snapshot",
      "mcp__playwright-mcp__browser_click",
      "mcp__playwright-mcp__browser_drag",
      "mcp__playwright-mcp__browser_hover",
      "mcp__playwright-mcp__browser_select_option",
      "mcp__playwright-mcp__browser_tab_list",
      "mcp__playwright-mcp__browser_tab_new",
      "mcp__playwright-mcp__browser_tab_select",
      "mcp__playwright-mcp__browser_tab_close",
      "mcp__playwright-mcp__browser_wait_for",
      "mcp__github__search_repositories",
      "mcp__github__get_file_contents",
      "mcp__github__list_commits",
      "mcp__github__list_issues",
      "mcp__github__search_code",
      "mcp__github__search_issues",
      "mcp__github__search_users",
      "mcp__github__get_issue",
      "mcp__github__get_pull_request",
      "mcp__github__list_pull_requests",
      "mcp__github__get_pull_request_files",
      "mcp__github__get_pull_request_status",
      "mcp__github__get_pull_request_comments",
      "mcp__github__get_pull_request_reviews",
      "mcp__neon__list_projects",
      "mcp__neon__describe_project",
      "mcp__neon__run_sql",
      "mcp__neon__run_sql_transaction",
      "mcp__neon__describe_table_schema",
      "mcp__neon__get_database_tables",
      "mcp__neon__describe_branch",
      "mcp__neon__get_connection_string",
      "mcp__neon__explain_sql_statement",
      "mcp__neon__list_slow_queries",
      "mcp__neon__list_branch_computes",
      "mcp__neon__list_organizations",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "WebFetch(domain:ui.shadcn.com)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:docs.stripe.com)",
      "WebFetch(domain:support.stripe.com)",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:www.postgresql.org)",
      "WebFetch(domain:heroicons.com)",
      "WebFetch(domain:vercel.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__quiz-postgres__query",
      "Bash(php artisan:*)",
      "Bash(composer:*)",
      "Bash(sd:*)",
      "Bash(php -l:*)",
      "Bash(php:*)"
    ],
    "deny": [
      "Bash(git reset:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(git restore --staged:*)",
      "Bash(git revert:*)",
      "Bash(git rebase:*)",
      "Bash(git merge:*)",
      "Bash(git clean:*)",
      "Bash(git branch -D:*)",
      "Bash(git branch --delete:*)",
      "Bash(git tag -d:*)",
      "Bash(git reflog:*)",
      "Bash(git gc:*)",
      "Bash(git fsck:*)",
      "Bash(git reset --hard:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(git push --force-with-lease:*)",
      "Bash(git push origin --delete:*)",
      "Bash(git clean -f:*)",
      "Bash(git clean -fd:*)",
      "Bash(git clean -fx:*)",
      "Bash(git branch --delete --force:*)",
      "Bash(git gc --prune:*)",
      "Bash(git prune:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git stash drop:*)",
      "Bash(git stash clear:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git bisect:*)",
      "Bash(git submodule:*)",
      "Bash(git filter-branch:*)",
      "Bash(git rm:*)",
      "Bash(git mv:*)",
      "Bash(git update-ref:*)",
      "Bash(git remote add:*)",
      "Bash(git remote remove:*)",
      "Bash(git remote set-url:*)",
      "Bash(git config --global:*)",
      "Bash(git config --system:*)",
      "Bash(git config user:*)",
      "Bash(git config credential:*)",
      "Bash(git am:*)",
      "Bash(git apply:*)",
      "Bash(git archive:*)",
      "Bash(git bundle:*)",
      "Bash(git commit --amend:*)",
      "Bash(git config --unset:*)",
      "Bash(git config core.editor:*)",
      "Bash(git notes:*)",
      "Bash(git replace:*)",
      "Bash(git request-pull:*)",
      "Bash(git rerere:*)",
      "Bash(git worktree:*)",
      "Bash(git sparse-checkout:*)",
      "Bash(git lfs:*)",
      "Bash(sudo:*)",
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(shred:*)",
      "Bash(echo * > /proc/sysrq-trigger:*)",
      "Bash(* > /dev/sda:*)",
      "Bash(* > /dev/sd*:*)",
      "Bash(* > /dev/null && rm:*)",
      "Bash(history | sh:*)",
      "Bash(^*^*:*)",
      "Bash(:(){:|:&};::*)",
      "Bash(ulimit:*)",
      "Bash(chown -R:*)",
      "Bash(chgrp -R:*)",
      "Bash(umount:*)",
      "Bash(mount:*)",
      "Bash(fdisk:*)",
      "Bash(fsck:*)",
      "Bash(halt:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(init 0:*)",
      "Bash(init 6:*)",
      "mcp__git__git_reset",
      "mcp__git__git_checkout",
      "mcp__git__git_create_branch",
      "mcp__git__git_init",
      "mcp__git__git_branch",
      "mcp__github__create_or_update_file",
      "mcp__github__create_repository",
      "mcp__github__push_files",
      "mcp__github__create_issue",
      "mcp__github__create_pull_request",
      "mcp__github__fork_repository",
      "mcp__github__create_branch",
      "mcp__github__update_issue",
      "mcp__github__add_issue_comment",
      "mcp__github__create_pull_request_review",
      "mcp__github__merge_pull_request",
      "mcp__github__update_pull_request_branch",
      "mcp__neon__create_project",
      "mcp__neon__delete_project",
      "mcp__neon__create_branch",
      "mcp__neon__delete_branch",
      "mcp__neon__prepare_database_migration",
      "mcp__neon__complete_database_migration",
      "mcp__neon__provision_neon_auth",
      "mcp__neon__prepare_query_tuning",
      "mcp__neon__complete_query_tuning"
    ],
    "defaultMode": "acceptEdits"
  }
}